
// TC: O(N * M)
int const size = 20;

// Stores the mask of the vector
int dp[size];

// Stores the current size of dp[]
int ans;

// Function to store the
// mask of given integer
void insertVector(int mask)
{
    // Iterate over the range [0, 20]
    for (int i = 0; i < 20; i++) {

        // If i-th bit 0
        if ((mask & 1 << i) == 0)
            continue;

        // If dp[i] is zero
        if (!dp[i]) {

            // Store the position in dp
            dp[i] = mask;

            // Increment the answer
            ++ans;

            // Return from the loop
            return;
        }

        // mask = mask XOR dp[i]
        mask ^= dp[i];
    }
}

// Function to find the size of the
// set having Bitwise XOR of all the
// subset of the given array
void maxSizeSet(int arr[], int N)
{
    // Traverse the array
    for (int i = 0; i < N; i++) {
        insertVector(arr[i]);
    }

    // Print the answer
    cout << (1 << ans) << endl;
}
