void dfs(ll node , vector<ll> &vis , stack<ll> &st, vector<ll> adj[])
    {
        vis[node] = 1;
        for(auto it: adj[node])
        {
            if(!vis[it]) dfs(it , vis , st , adj);
        }
        st.push(node);
    }

    vector<ll> topoSort(ll v , vector<ll> adj[]) // O(V + E), same as dfs complexity
    {
        vector<ll> vis(v);
        stack<ll> st;
        for (int i = 0; i < v; ++i)
        {
            if(!vis[i])
            {
                dfs(i , vis, st, adj);
            }
        }
        vector<ll> ans;
        while(!st.empty())
        {
            ans.pb(st.top());
            st.pop();
        }
        return ans;
    }
