const ll N = 1e5 + 10;
    vector<ll> g[N];
    vector<ll> par[N];

    void dfs(ll vertex, ll par = -1) // O(V + E), if E is of order V^2 then can blow to O(V^2)
    {
        // take action on vertex after entering the vertex 
        par[vertex] = par;
        for(auto child: g[vertex])
        {
            if(child == par) continue;
            // take action on child before entering the child node

            dfs(child , vertex);

            // take action on child after exiting the child node 
        }

        // take action on vertex before exiting the vertex
    }

vector<ll> path(ll v)
{
    vector<ll> ans;
    while(v != -1)
    {
        ans.pb(v);
        v = par[v];
    }
    reverse(all(ans));
    return ans;
}
